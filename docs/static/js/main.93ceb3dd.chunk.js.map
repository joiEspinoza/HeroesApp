{"version":3,"sources":["Auth/AuthContext.js","Types/types.js","Auth/authReducer.js","Components/Login/CScreenLogin.js","Data/DHeroes.js","Selectors/SGetHerosByPublisher.js","Components/Heroes/CHeroCard.js","Components/Heroes/CHeroesList.js","Components/Dc/CScreenDc.js","Selectors/SGetHeroById.js","Components/Heroes/CScreenHero.js","Components/Marvel/CScreenMarvel.js","Hooks/useForm.js","Selectors/SGetHeroByNameQ.js","Components/Search/CScreenSearch.js","Components/UI/CNavBar.js","Components/Routers/DashBoardRouters.js","Components/Routers/PrivateRoute.js","Components/Routers/PublicRoute.js","Components/Routers/AppRouter.js","App/HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","CScreenLogin","history","dispatch","useContext","className","onClick","name","lastPath","localStorage","getItem","replace","DHeroes","SGetHerosByPublisher","publisher","includes","Error","filter","objetoH","CHeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","color","to","CHeroesList","heroes","useMemo","map","CScreenDc","SGetHeroById","find","CScreenHero","heroeId","useParams","hero","length","push","goBack","CScreenMarvel","useForm","initialState","useState","formValues","setFormValues","reset","handleInputChange","target","value","SGetHeroByNameQ","nameQ","toLowerCase","ObjetoH","CScreenSearch","location","useLocation","queryString","parse","search","q","searchText","herosFilter","onSubmit","event","preventDefault","placeholder","onChange","autoComplete","CNavbar","user","useHistory","activeClassName","exact","DashBoardRouters","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","protoType","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","divRoot","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.93ceb3dd.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext();\r\n","\r\nexport const types = \r\n{\r\n    login  : \"[auth] login\",\r\n    logout : \"[auth] logout\"\r\n};","import { types } from \"../Types/types\";\r\n\r\n////\r\n\r\n//const state = { name : \"jose\", logged : true };\r\n\r\n/////\r\n\r\nconst authReducer = ( state = {}, action ) => \r\n{\r\n    \r\n    switch ( action.type ) \r\n    {\r\n        case types.login  : return { ...action.payload, logged : true };\r\n\r\n        case types.logout : return { logged : false };\r\n            \r\n        default: return state;\r\n    };\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default authReducer;\r\n","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../Auth/AuthContext';\r\nimport { types } from '../../Types/types';\r\n////\r\n\r\nconst CScreenLogin = ( { history } ) =>  // history -> prop de react-router-dom\r\n{\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    ////\r\n\r\n    const handleLogin = () =>\r\n    {\r\n\r\n        const action = { type : types.login, payload : { name : \"King\" } };\r\n\r\n        dispatch( action );\r\n\r\n        /////\r\n\r\n        const lastPath = localStorage.getItem( \"lastPath\" ) || \"/\";\r\n\r\n        history.replace( lastPath ); //reemplaza la direccion dentro de la historia evitando que se pueda volver a la pagina inicial\r\n    };\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n        <div className=\"container mt-5\">\r\n\r\n            <h1>Screen | Login</h1>\r\n            <hr/>\r\n            <button className=\"btn btn-outline-dark\" onClick={ handleLogin }>Login</button>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n/////\r\n\r\nexport default CScreenLogin;\r\n","export const DHeroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n];","import { DHeroes } from \"../Data/DHeroes\";\r\n\r\n/////\r\n\r\nconst SGetHerosByPublisher = ( publisher ) => \r\n{\r\n \r\n    const validPublisher = [ 'DC Comics', 'Marvel Comics' ];\r\n\r\n    if( !validPublisher.includes( publisher ) )\r\n    {\r\n        throw new Error( `El publisher ${ publisher } no es correcto` );\r\n    };\r\n\r\n    return DHeroes.filter( ( objetoH ) => objetoH.publisher === publisher );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default SGetHerosByPublisher;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/////\r\n\r\nconst CHeroCard = ( { id,superhero,alter_ego,first_appearance,characters } ) => \r\n{\r\n    \r\n    return (\r\n\r\n        \r\n        <div className=\"card ms-3\" style={ { maxWidth : 540 } }>\r\n\r\n           <div className=\"row no-gutters\">\r\n\r\n                <div className=\"col-md-4\">\r\n                \r\n                    <img src={ `../img/${ id }.jpg` } className=\"card-img\" alt={ superhero }/>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-8\">\r\n\r\n                    <div className=\"card-body\">\r\n\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\">{ alter_ego }</p>\r\n                        { alter_ego !== characters && <p className=\"card-text\"><small>{ characters }</small></p> }\r\n                        <p className=\"card-text\"><small className=\"text-muted\">{ first_appearance }</small></p>\r\n                        <Link style={ { color : \"black\" } } to={ `./hero/${ id }` }>Más ...</Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n           </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\n////\r\n\r\nexport default CHeroCard;\r\n","import React, { useMemo } from 'react';\r\nimport SGetHerosByPublisher from '../../Selectors/SGetHerosByPublisher';\r\nimport CHeroCard from './CHeroCard';\r\n\r\n/////\r\n\r\nconst CHeroesList = ( { publisher } ) => \r\n{ \r\n    const heroes = useMemo( () => SGetHerosByPublisher( publisher ), [ publisher ] );// la funcion vuelve a dispararse si es que el publisher cambia\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"card-columns animate__animated animate__fadeIn\" >\r\n            \r\n            { heroes.map( ( objetoH )  => <CHeroCard key={ objetoH.id } { ...objetoH } /> ) }\r\n        \r\n        </div>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CHeroesList;\r\n","import React from 'react';\r\nimport CHeroesList from '../Heroes/CHeroesList';\r\n\r\n////\r\n\r\nconst CScreenDc = () => \r\n{\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <CHeroesList publisher='DC Comics' />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n////\r\n\r\nexport default CScreenDc;\r\n","import { DHeroes } from \"../Data/DHeroes\";\r\n\r\n/////\r\n\r\nconst SGetHeroById = ( id ) => \r\n{\r\n    return DHeroes.find( ( objetoH ) => objetoH.id === id );\r\n};\r\n\r\n/////\r\n\r\nexport default SGetHeroById;\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport SGetHeroById from '../../Selectors/SGetHeroById';\r\n\r\n////\r\n\r\nconst CScreenHero = ( { history } ) => \r\n{\r\n\r\n    const { heroeId } = useParams(); // hook de router-dom | extrae parametros de url en forma de objeto\r\n    \r\n    /////\r\n\r\n    const hero = useMemo( () => SGetHeroById( heroeId ), [ heroeId ] );\r\n\r\n    /////\r\n\r\n    if( !hero )\r\n    {\r\n        return <Redirect to=\"/\" />\r\n    };\r\n\r\n    /////\r\n\r\n    const { id,superhero,publisher,alter_ego,first_appearance,characters } = hero;\r\n\r\n    /////\r\n   \r\n    const handleBack = () =>\r\n    {\r\n        if(history.length <= 2)\r\n        {\r\n            history.push( \"/\" );\r\n        }\r\n        else\r\n        {\r\n           history.goBack(); \r\n        };\r\n\r\n    };\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n       <div className=\"row mt-5\">\r\n\r\n           <div className=\"col-4\">\r\n\r\n                <img src={ `../img/${ id }.jpg` } className=\"img-thumbnail animate__animated animate__fadeInLeft\" alt={ superhero }/>\r\n\r\n           </div>\r\n\r\n           <div className=\"col-8\">\r\n\r\n                <h3>{ superhero }</h3>\r\n\r\n                <ul className=\"list-group list-group-flush\">\r\n\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b>{ alter_ego }</li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b>{ publisher }</li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b>{ first_appearance }</li>\r\n                    <li className=\"list-group-item\"><b>Characters: </b>{ characters }</li>\r\n\r\n                </ul>\r\n\r\n                <button className=\"btn btn-outline-dark mt-4\" onClick={ handleBack }>Back</button>\r\n\r\n           </div>\r\n           \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CScreenHero;\r\n","import React from 'react';\r\nimport CHeroesList from '../Heroes/CHeroesList';\r\n\r\n////\r\n\r\nconst CScreenMarvel = () => \r\n{\r\n    \r\n    return (\r\n\r\n       <div>\r\n            <CHeroesList publisher='Marvel Comics' />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default CScreenMarvel;\r\n","import { useState } from \"react\"\n\n\n///////////////////////////////////////////////////////////////////////////////////////\n\n\nconst useForm = ( initialState = {} ) => \n{\n    const [ formValues, setFormValues ] = useState( initialState );\n\n    const reset = () => setFormValues(initialState);\n\n    const handleInputChange = ( { target } ) =>\n    {\n        setFormValues( { ...formValues, [ target.name ] : target.value } );\n    }\n\n    return [ formValues, handleInputChange, reset ];\n}\n\n\nexport default useForm;\n","import { DHeroes } from \"../Data/DHeroes\";\r\n\r\n\r\nconst SGetHeroByNameQ = ( nameQ ) => \r\n{\r\n\r\n    if( nameQ === \"\" ){ return [] };\r\n\r\n    nameQ = nameQ.toLowerCase().replace(/[\" \"]/g,\"\");\r\n    return DHeroes.filter( ( ObjetoH )=> ObjetoH.superhero.toLowerCase().replace(/[\" \"]/g,\"\").includes( nameQ ) );\r\n};\r\n\r\nexport default SGetHeroByNameQ;\r\n","import React, { useMemo } from 'react'\r\nimport queryString  from \"query-string\"; // transforma el q de la ruta en un objeto\r\nimport { useLocation } from 'react-router-dom';\r\nimport useForm from '../../Hooks/useForm';\r\nimport CHeroCard from '../Heroes/CHeroCard';\r\nimport SGetHeroByNameQ from '../../Selectors/SGetHeroByNameQ';\r\n\r\n/////\r\n\r\nconst CScreenSearch = ( { history } ) => \r\n{\r\n\r\n    const location = useLocation(); // hook de react router dom\r\n    \r\n    /////\r\n\r\n    const { q = \"\" } = queryString.parse( location.search ); // extraccion y parceo de q | addon query-string\r\n    // se inicializa en \"\" en caso de que este vacio, si no se inicializa arroja undefine\r\n\r\n    /////\r\n    \r\n    const [ formValues, handleInputChange ] = useForm( { searchText : q } );\r\n\r\n    const { searchText } = formValues;\r\n\r\n    /////\r\n\r\n    const handleSearch = ( event ) =>\r\n    {\r\n        event.preventDefault();\r\n        history.push( `?q=${ searchText }` );\r\n    }\r\n\r\n    /////\r\n\r\n    const herosFilter = useMemo( () => SGetHeroByNameQ( q ), [ q ] );\r\n\r\n    ////\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-5\">\r\n\r\n                    <h4>Search Form</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit={ handleSearch }>\r\n\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"find your hero\" name=\"searchText\" value={ searchText } onChange={ handleInputChange } autoComplete=\"off\" />\r\n                        <button type=\"submit\" className=\"btn btn-outline-dark mt-1 btn-block\" >Search</button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n\r\n                   \r\n                    <h4>Result</h4>\r\n                    <hr/>\r\n\r\n                    { q === \"\" && <div className=\"alert alert-dark\">Search a Hero</div> }\r\n\r\n                    { q !== \"\" && herosFilter.length === 0 && <div className=\"alert alert-dark\">There is no a Hero <b>{ q }</b></div> }\r\n\r\n                    { herosFilter.map( ( ObjetoH )=> <CHeroCard key={ ObjetoH.id } {...ObjetoH} /> )    }\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\n////\r\n\r\nexport default CScreenSearch;\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../Auth/AuthContext';\r\nimport { types } from '../../Types/types';\r\n\r\n/////\r\n\r\nexport const CNavbar = () => \r\n{   \r\n    \r\n    const { user:{ name }, dispatch } = useContext( AuthContext );\r\n\r\n    const history = useHistory(); // router cuenta con un provider que entrega la informacion global de las rutas\r\n \r\n    /////\r\n\r\n    const handleLogout = () =>\r\n    {\r\n        const action = { type : types.logout };\r\n        dispatch( action );\r\n        history.replace( \"/login\" );\r\n    };\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                H\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n               \r\n               <div className=\"navbar-nav\">\r\n\r\n                    <NavLink activeClassName=\"active\"className=\"nav-item nav-link\" exact to=\"/marvel\">\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink activeClassName=\"active\"className=\"nav-item nav-link\" exact to=\"/dc\">\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink activeClassName=\"active\"className=\"nav-item nav-link\" exact to=\"/search\">\r\n                        Search\r\n                    </NavLink>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        { name }\r\n                    </span>\r\n\r\n                    <button onClick={ handleLogout } className=\"nav-item nav-link btn\" >\r\n                        Logout\r\n                    </button>\r\n\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n};","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport CScreenDc from '../Dc/CScreenDc';\r\nimport CScreenHero from '../Heroes/CScreenHero';\r\nimport CScreenMarvel from '../Marvel/CScreenMarvel';\r\nimport CScreenSearch from '../Search/CScreenSearch';\r\nimport { CNavbar } from '../UI/CNavBar';\r\n\r\n/////\r\n\r\nconst DashBoardRouters = () => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n\r\n            <CNavbar />  { /* Component */ }\r\n\r\n            <div className=\"container mt-5\">\r\n\r\n                <Switch>\r\n                \r\n                    <Route exact path=\"/marvel\" component={ CScreenMarvel }></Route>\r\n\r\n                    <Route exact path=\"/hero/:heroeId\" component={ CScreenHero }></Route>\r\n                    { /* Recibe argumento por URL :heroId*/ }\r\n\r\n                    <Route exact path=\"/dc\" component={ CScreenDc }></Route>\r\n\r\n                    <Route exact path=\"/search\" component={ CScreenSearch }/>\r\n\r\n                    <Redirect to=\"/marvel\" ></Redirect>\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default DashBoardRouters;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PrivateRoute = ( { isAuthenticated, component:Component, ...rest } ) => \r\n{\r\n\r\n    localStorage.setItem( \"lastPath\", rest.location.pathname );\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( isAuthenticated ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/login\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPrivateRoute.protoType = {\r\n\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PublicRoute = ( { isAuthenticated, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( !isAuthenticated ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPublicRoute.protoType = {\r\n\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PublicRoute;\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthContext } from '../../Auth/AuthContext';\r\nimport CScreenLogin from '../Login/CScreenLogin';\r\nimport DashBoardRouters from './DashBoardRouters';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\n/////\r\n\r\nconst AppRouter = () => \r\n{\r\n    \r\n    const { user:{ logged } } = useContext( AuthContext );\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n        <Router>\r\n\r\n            <div>\r\n\r\n                <Switch>\r\n\r\n                    <PublicRoute isAuthenticated={ logged } exact path=\"/login\" component={ CScreenLogin } />\r\n\r\n                    <PrivateRoute isAuthenticated={ logged } path=\"/\" component={ DashBoardRouters } />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from '../Auth/AuthContext';\r\nimport authReducer from '../Auth/authReducer';\r\nimport AppRouter from '../Components/Routers/AppRouter';\r\nimport \"./HeroesApp.css\";\r\n//``\r\n\r\n/////\r\n\r\nconst init = () =>\r\n{\r\n    return JSON.parse( localStorage.getItem( \"user\" ) ) || { logged : false };\r\n};\r\n\r\n/////\r\n\r\nconst HeroesApp = () => \r\n{\r\n    const [ user, dispatch ] = useReducer( authReducer, {}, init );\r\n\r\n    ////\r\n\r\n    useEffect( () => \r\n    {\r\n        \r\n        ( localStorage.setItem( \"user\", JSON.stringify( user ) ) );\r\n\r\n        \r\n    }, [ user ]);\r\n\r\n\r\n    ////\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={ { user, dispatch } }> {/* user y dispatch se pueden utilizar en toda la aplicacion */}\r\n\r\n            <AppRouter />\r\n\r\n        </AuthContext.Provider>\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default HeroesApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport HeroesApp from './App/HeroesApp';\r\n//``\r\n\r\nconst divRoot = document.getElementById( \"root\" );\r\n\r\n\r\nReactDOM.render( <HeroesApp />, divRoot );"],"sourceRoot":""}